package kotlinx.html

import kotlin.contracts.ExperimentalContracts
import kotlin.contracts.InvocationKind
import kotlin.contracts.contract
import kotlinx.html.*
import kotlinx.html.impl.*
import kotlinx.html.attributes.*

/*******************************************************************************
    DO NOT EDIT
    This file was generated by module generate
*******************************************************************************/

@Suppress("unused")
open class EM(initialAttributes : Map<String, String>, override val consumer : TagConsumer<*>) : HTMLTag("em", consumer, initialAttributes, null, true, false), HtmlBlockInlineTag {

}
val EM.asFlowContent : FlowContent
    get()  = this

val EM.asPhrasingContent : PhrasingContent
    get()  = this


@Suppress("unused")
open class EMBED(initialAttributes : Map<String, String>, override val consumer : TagConsumer<*>) : HTMLTag("embed", consumer, initialAttributes, null, true, true), CommonAttributeGroupFacadeFlowInteractivePhrasingContent {
    var src : String
        get()  = attributeStringString[this, "src"]
        set(newValue) {attributeStringString[this, "src"] = newValue}

    var height : String
        get()  = attributeStringString[this, "height"]
        set(newValue) {attributeStringString[this, "height"] = newValue}

    var width : String
        get()  = attributeStringString[this, "width"]
        set(newValue) {attributeStringString[this, "width"] = newValue}

    var type : String
        get()  = attributeStringString[this, "type"]
        set(newValue) {attributeStringString[this, "type"] = newValue}


}
val EMBED.asFlowContent : FlowContent
    get()  = this

val EMBED.asInteractiveContent : InteractiveContent
    get()  = this

val EMBED.asPhrasingContent : PhrasingContent
    get()  = this


