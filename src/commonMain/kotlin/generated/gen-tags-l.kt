package kotlinx.html

import kotlin.contracts.ExperimentalContracts
import kotlin.contracts.InvocationKind
import kotlin.contracts.contract
import kotlinx.html.*
import kotlinx.html.impl.*
import kotlinx.html.attributes.*

/*******************************************************************************
    DO NOT EDIT
    This file was generated by module generate
*******************************************************************************/

@Suppress("unused")
open class LABEL(initialAttributes : Map<String, String>, override val consumer : TagConsumer<*>) : HTMLTag("label", consumer, initialAttributes, null, true, false), CommonAttributeGroupFacadeFlowInteractivePhrasingContent {
    var form : String
        get()  = attributeStringString[this, "form"]
        set(newValue) {attributeStringString[this, "form"] = newValue}

    var htmlFor : String
        get()  = attributeStringString[this, "for"]
        set(newValue) {attributeStringString[this, "for"] = newValue}


}
val LABEL.asFlowContent : FlowContent
    get()  = this

val LABEL.asInteractiveContent : InteractiveContent
    get()  = this

val LABEL.asPhrasingContent : PhrasingContent
    get()  = this


@Suppress("unused")
open class LEGEND(initialAttributes : Map<String, String>, override val consumer : TagConsumer<*>) : HTMLTag("legend", consumer, initialAttributes, null, true, false), HtmlBlockInlineTag {

}
val LEGEND.asFlowContent : FlowContent
    get()  = this

val LEGEND.asPhrasingContent : PhrasingContent
    get()  = this


@Suppress("unused")
open class LI(initialAttributes : Map<String, String>, override val consumer : TagConsumer<*>) : HTMLTag("li", consumer, initialAttributes, null, false, false), HtmlBlockTag {
    var value : String
        get()  = attributeStringString[this, "value"]
        set(newValue) {attributeStringString[this, "value"] = newValue}


}

@Suppress("unused")
open class LINK(initialAttributes : Map<String, String>, override val consumer : TagConsumer<*>) : HTMLTag("link", consumer, initialAttributes, null, false, true), CommonAttributeGroupFacadeFlowMetaDataPhrasingContent {
    var href : String
        get()  = attributeStringString[this, "href"]
        set(newValue) {attributeStringString[this, "href"] = newValue}

    var hrefLang : String
        get()  = attributeStringString[this, "hreflang"]
        set(newValue) {attributeStringString[this, "hreflang"] = newValue}

    var rel : String
        get()  = attributeStringString[this, "rel"]
        set(newValue) {attributeStringString[this, "rel"] = newValue}

    var media : String
        get()  = attributeStringString[this, "media"]
        set(newValue) {attributeStringString[this, "media"] = newValue}

    var type : String
        get()  = attributeStringString[this, "type"]
        set(newValue) {attributeStringString[this, "type"] = newValue}

    var sizes : String
        get()  = attributeStringString[this, "sizes"]
        set(newValue) {attributeStringString[this, "sizes"] = newValue}

    var integrity : String
        get()  = attributeStringString[this, "integrity"]
        set(newValue) {attributeStringString[this, "integrity"] = newValue}

    var htmlAs : LinkAs
        get()  = attributeLinkAsEnumLinkAsValues[this, "as"]
        set(newValue) {attributeLinkAsEnumLinkAsValues[this, "as"] = newValue}


}
val LINK.asFlowContent : FlowContent
    get()  = this

val LINK.asMetaDataContent : MetaDataContent
    get()  = this

val LINK.asPhrasingContent : PhrasingContent
    get()  = this


