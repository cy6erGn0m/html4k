package kotlinx.html

import kotlin.contracts.ExperimentalContracts
import kotlin.contracts.InvocationKind
import kotlin.contracts.contract
import kotlinx.html.*
import kotlinx.html.impl.*
import kotlinx.html.attributes.*

/*******************************************************************************
    DO NOT EDIT
    This file was generated by module generate
*******************************************************************************/

@Suppress("unused")
open class KBD(initialAttributes : Map<String, String>, override val consumer : TagConsumer<*>) : HTMLTag("kbd", consumer, initialAttributes, null, true, false), HtmlBlockInlineTag {

}
val KBD.asFlowContent : FlowContent
    get()  = this

val KBD.asPhrasingContent : PhrasingContent
    get()  = this


@Suppress("unused")
open class KEYGEN(initialAttributes : Map<String, String>, override val consumer : TagConsumer<*>) : HTMLTag("keygen", consumer, initialAttributes, null, true, true), CommonAttributeGroupFacadeFlowInteractivePhrasingContent {
    var autoFocus : Boolean
        get()  = attributeBooleanTicker[this, "autofocus"]
        set(newValue) {attributeBooleanTicker[this, "autofocus"] = newValue}

    var challenge : String
        get()  = attributeStringString[this, "challenge"]
        set(newValue) {attributeStringString[this, "challenge"] = newValue}

    var disabled : Boolean
        get()  = attributeBooleanTicker[this, "disabled"]
        set(newValue) {attributeBooleanTicker[this, "disabled"] = newValue}

    var form : String
        get()  = attributeStringString[this, "form"]
        set(newValue) {attributeStringString[this, "form"] = newValue}

    var keyType : KeyGenKeyType
        get()  = attributeKeyGenKeyTypeEnumKeyGenKeyTypeValues[this, "keytype"]
        set(newValue) {attributeKeyGenKeyTypeEnumKeyGenKeyTypeValues[this, "keytype"] = newValue}

    var name : String
        get()  = attributeStringString[this, "name"]
        set(newValue) {attributeStringString[this, "name"] = newValue}


}
val KEYGEN.asFlowContent : FlowContent
    get()  = this

val KEYGEN.asInteractiveContent : InteractiveContent
    get()  = this

val KEYGEN.asPhrasingContent : PhrasingContent
    get()  = this


