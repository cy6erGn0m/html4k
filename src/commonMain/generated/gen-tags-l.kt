package kotlinx.html

/*******************************************************************************
DO NOT EDIT
This file was generated by module generate
 *******************************************************************************/

@Suppress("unused")
open class LABEL<E>(initialAttributes: Map<String, String>, override val consumer: TagConsumer<*, E>) :
    HTMLTag<E>("label", consumer, initialAttributes, null, true, false),
    CommonAttributeGroupFacadeFlowInteractivePhrasingContent<E> {
    var form: String
        get() = attributeStringString.get(this, "form")
        set(newValue) {
            attributeStringString.set(this, "form", newValue)
        }

    var htmlFor: String
        get() = attributeStringString.get(this, "for")
        set(newValue) {
            attributeStringString.set(this, "for", newValue)
        }


}

val <E> LABEL<E>.asFlowContent: FlowContent<E>
    get() = this

val <E> LABEL<E>.asInteractiveContent: InteractiveContent<E>
    get() = this

val <E> LABEL<E>.asPhrasingContent: PhrasingContent<E>
    get() = this


@Suppress("unused")
open class LEGEND<E>(initialAttributes: Map<String, String>, override val consumer: TagConsumer<*, E>) :
    HTMLTag<E>("legend", consumer, initialAttributes, null, true, false), HtmlBlockInlineTag<E>

val <E> LEGEND<E>.asFlowContent: FlowContent<E>
    get() = this

val <E> LEGEND<E>.asPhrasingContent: PhrasingContent<E>
    get() = this


@Suppress("unused")
open class LI<E>(initialAttributes: Map<String, String>, override val consumer: TagConsumer<*, E>) :
    HTMLTag<E>("li", consumer, initialAttributes, null, false, false), HtmlBlockTag<E> {
    var value: String
        get() = attributeStringString.get(this, "value")
        set(newValue) {
            attributeStringString.set(this, "value", newValue)
        }


}

@Suppress("unused")
open class LINK<E>(initialAttributes: Map<String, String>, override val consumer: TagConsumer<*, E>) :
    HTMLTag<E>("link", consumer, initialAttributes, null, false, true),
    CommonAttributeGroupFacadeFlowMetaDataPhrasingContent<E> {
    var href: String
        get() = attributeStringString.get(this, "href")
        set(newValue) {
            attributeStringString.set(this, "href", newValue)
        }

    var hrefLang: String
        get() = attributeStringString.get(this, "hreflang")
        set(newValue) {
            attributeStringString.set(this, "hreflang", newValue)
        }

    var rel: String
        get() = attributeStringString.get(this, "rel")
        set(newValue) {
            attributeStringString.set(this, "rel", newValue)
        }

    var media: String
        get() = attributeStringString.get(this, "media")
        set(newValue) {
            attributeStringString.set(this, "media", newValue)
        }

    var type: String
        get() = attributeStringString.get(this, "type")
        set(newValue) {
            attributeStringString.set(this, "type", newValue)
        }

    var sizes: String
        get() = attributeStringString.get(this, "sizes")
        set(newValue) {
            attributeStringString.set(this, "sizes", newValue)
        }

    var integrity: String
        get() = attributeStringString.get(this, "integrity")
        set(newValue) {
            attributeStringString.set(this, "integrity", newValue)
        }


}

val <E> LINK<E>.asFlowContent: FlowContent<E>
    get() = this

val <E> LINK<E>.asMetaDataContent: MetaDataContent<E>
    get() = this

val <E> LINK<E>.asPhrasingContent: PhrasingContent<E>
    get() = this


