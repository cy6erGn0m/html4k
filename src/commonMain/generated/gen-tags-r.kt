package kotlinx.html

/*******************************************************************************
DO NOT EDIT
This file was generated by module generate
 *******************************************************************************/

@Suppress("unused")
open class RP<E>(initialAttributes: Map<String, String>, override val consumer: TagConsumer<*, E>) :
  HTMLTag<E>("rp", consumer, initialAttributes, null, true, false), HtmlInlineTag<E>

@Suppress("unused")
open class RT<E>(initialAttributes: Map<String, String>, override val consumer: TagConsumer<*, E>) :
  HTMLTag<E>("rt", consumer, initialAttributes, null, true, false), HtmlInlineTag<E>

@Suppress("unused")
open class RUBY<E>(initialAttributes: Map<String, String>, override val consumer: TagConsumer<*, E>) :
  HTMLTag<E>("ruby", consumer, initialAttributes, null, true, false), HtmlBlockInlineTag<E>

/**
 * Ruby annotation text
 */
@HtmlTagMarker
inline fun <E> RUBY<E>.rt(classes: String? = null, crossinline block: RT<E>.() -> Unit = {}): Unit =
  RT(attributesMapOf("class", classes), consumer).visit(block)

/**
 * Parenthesis for ruby annotation text
 */
@HtmlTagMarker
inline fun <E> RUBY<E>.rp(classes: String? = null, crossinline block: RP<E>.() -> Unit = {}): Unit =
  RP(attributesMapOf("class", classes), consumer).visit(block)

val <E> RUBY<E>.asFlowContent: FlowContent<E>
  get() = this

val <E> RUBY<E>.asPhrasingContent: PhrasingContent<E>
  get() = this


