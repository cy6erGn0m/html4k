package kotlinx.html

/*******************************************************************************
DO NOT EDIT
This file was generated by module generate
 *******************************************************************************/

@Suppress("unused")
open class EM<E>(initialAttributes: Map<String, String>, override val consumer: TagConsumer<*, E>) :
    HTMLTag<E>("em", consumer, initialAttributes, null, true, false), HtmlBlockInlineTag<E>

val <E> EM<E>.asFlowContent: FlowContent<E>
    get() = this

val <E> EM<E>.asPhrasingContent: PhrasingContent<E>
    get() = this


@Suppress("unused")
open class EMBED<E>(initialAttributes: Map<String, String>, override val consumer: TagConsumer<*, E>) :
    HTMLTag<E>("embed", consumer, initialAttributes, null, true, true),
    CommonAttributeGroupFacadeFlowInteractivePhrasingContent<E> {
    var src: String
        get() = attributeStringString.get(this, "src")
        set(newValue) {
            attributeStringString.set(this, "src", newValue)
        }

    var height: String
        get() = attributeStringString.get(this, "height")
        set(newValue) {
            attributeStringString.set(this, "height", newValue)
        }

    var width: String
        get() = attributeStringString.get(this, "width")
        set(newValue) {
            attributeStringString.set(this, "width", newValue)
        }

    var type: String
        get() = attributeStringString.get(this, "type")
        set(newValue) {
            attributeStringString.set(this, "type", newValue)
        }


}

val <E> EMBED<E>.asFlowContent: FlowContent<E>
    get() = this

val <E> EMBED<E>.asInteractiveContent: InteractiveContent<E>
    get() = this

val <E> EMBED<E>.asPhrasingContent: PhrasingContent<E>
    get() = this


